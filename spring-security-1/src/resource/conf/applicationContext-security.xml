<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd" >
       
     <!-- 静态资源，不用权限开始 -->
    <http pattern="/favicon.ico" security="none"/>
    <http pattern="**.jpg" security="none" />
    <http pattern="**.png" security="none" />
    <http pattern="**.gif" security="none" />
    <http pattern="**.css" security="none" />
    <http pattern="**.js" security="none" />
    <http pattern="**.swf" security="none" />  
    <http pattern="**.properties" security="none" />  
    <!-- 静态资源，不用权限结束 -->
    
    <http pattern="/public/**" security="none" />
    <http pattern="/login*" security="none" />
    <http pattern="/index" security="none" />
    <http pattern="/maxSessionError*" security="none" />
    <http pattern="/forbidden*" security="none" />
    <http use-expressions="true">
    <intercept-url pattern="/**" access="isAuthenticated()"/>
     <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
    <!-- <form-login login-page="/login"
                             default-target-url="/home"
                             authentication-failure-url="/login"
                             authentication-success-handler-ref="loginSuccessHandler"/> -->
      <!--  <form-login login-page="/login" 
                             default-target-url="/home"
                             authentication-failure-url="/login?error=1"/> -->
 	<form-login login-page="/login"
					username-parameter="j_username" 
					password-parameter="j_password" 
					default-target-url="/home"
					login-processing-url="/j_spring_security_check" 
					authentication-failure-url="/login?login_error=1"  authentication-success-handler-ref="loginSuccessHandler"/>
    <logout  invalidate-session="true"  delete-cookies="true" success-handler-ref="logoutSuccessHandler" />
    <csrf disabled="true"/>
    <access-denied-handler error-page="/forbidden"/>
    <session-management session-fixation-protection="newSession" >
        <concurrency-control max-sessions="1" error-if-maximum-exceeded="false"  expired-url="/maxSessionError" />
    </session-management>
        
       
    </http>

<!-- <http>元素会创建一个FilterChainProxy和filter使用的bean。 以前常常出现的，因为filter顺序不正确产生的问题，不会再出现了，现在这些过滤器的位置都是预定义好的。
 <authentication-provider>元素创建了一个DaoAuthenticationProvider bean，<user-service>元素创建了一个InMemoryDaoImpl。
  所有authentication-provider元素必须作为 <authentication-manager>的子元素， 它创建了一个ProviderManager，并把authentication provider注册到它里面。 -->
    <!--用户权限管理-->
    <authentication-manager alias="authenticationManager"  >
        <authentication-provider user-service-ref="userInfoProvider" >
            <password-encoder hash="md5" base64="true"/>
        </authentication-provider>
    </authentication-manager>


    <!--过滤器-->
    <beans:bean id="myFilter" class="com.authority.filter.MyFilterSecurityInterceptor">
   		 <!-- 用户拥有的权限 -->
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <!-- 用户是否拥有所请求资源的权限 -->
        <beans:property name="accessDecisionManager"  ref="myAccessDesisionmanager"/>
        <!-- 资源与权限对应关系 -->
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource"/>
    </beans:bean>
    
    <!--访问决策-->
    <beans:bean id="myAccessDesisionmanager" class="com.authority.filter.MyAccessDesisionmanager" />
    
    <!--用户信息Provider-->
    <beans:bean id="userInfoProvider" class="com.authority.service.impl.UserInfoServiceImpl" />
    
    <!--登陆成功-->
    <beans:bean id="loginSuccessHandler" class="com.authority.handler.MyLoginSuccessHandler" />
    <!--退出登录-->
    <beans:bean id="logoutSuccessHandler" class="com.authority.handler.MyLogoutSuccessHandler" />

    <!--系统资源管理-->
    <beans:bean id="mySecurityMetadataSource" class="com.authority.filter.MySecurityMetadataSource" >
    </beans:bean>
    
    <!--登陆失败-->
    <beans:bean id="loginFailHandler" class="com.authority.handler.MyLoginFailHandler"/>
    
    <!--解决注解@PreAuthorize失效-->
    <global-method-security pre-post-annotations="enabled" proxy-target-class="true" />

</beans:beans>